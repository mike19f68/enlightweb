{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.routing.ts","webpack:///src/app/build-set/build-set.component.ts","webpack:///src/app/build-set/build-set.component.html","webpack:///src/app/edit-song/edit-song.component.ts","webpack:///src/app/edit-song/edit-song.component.html","webpack:///src/app/lead-sheet/lead-sheet.component.ts","webpack:///src/app/lead-sheet/lead-sheet.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/scroll-songs/scroll-songs.component.ts","webpack:///src/app/scroll-songs/scroll-songs.component.html","webpack:///src/app/set-context-menu/set-context-menu.component.ts","webpack:///src/app/set-context-menu/set-context-menu.component.html","webpack:///src/app/set.model.ts","webpack:///src/app/set/set.component.ts","webpack:///src/app/set/set.component.html","webpack:///src/app/sets.service.ts","webpack:///src/app/songs.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","icon","storedSongs","selector","templateUrl","styleUrls","AppModule","forRoot","animation","declarations","imports","providers","bootstrap","routes","path","component","redirectTo","appRoutingModule","BuildSetComponent","song","receivedC","receiveSong","EditSongComponent","songsService","hasData","setStarted","setDate","Date","dateString","isLoading","chooseSet","ActiveIndex","searchString","selectedGroup","selectedAge","selectedRating","sortField","sortDirection","isHidden","xPosTabMenu","yPosTabMenu","indexTabMenu","SongRef","Title","FirstLine","Lyrics","Author","CCLIRef","Copyright","PaceGrp","Rating","LastPlay","MusicalKey","Tempo","getSongs","songsSub","getSongUpdateListener","subscribe","songs","console","log","field","selectedSong","index","form","invalid","addSong","value","resetForm","SelectedSong","deleteSong","unsubscribe","ngOnInit","changeSort","onAddSong","LeadSheetComponent","LoginComponent","ScrollSongsComponent","setsService","setList","setRows","newRow","Seq","Key","SongTitle","Style","splice","length","d","getFullYear","event","stopPropagation","clientX","clientY","menuselection","date","datepipe","transform","getSets","setsSub","getSetUpdateListener","sets","set","closeRightClickMenu","onDateSelected","loadTemplate","clearSet","SetContextMenuComponent","x","y","menuitems","theMenuItems","menuItemSelected","menuitem","emit","split","Set","setRow","SetComponent","SetsService","http","router","setsUpdated","get","pipe","setData","map","SetName","_id","transformedSets","next","loadedSets","asObservable","setname","seq","firstline","key","songref","lyrics","style","SetRow","post","responseData","setId","push","updatedsets","filter","providedIn","SongsService","songsUpdated","paceGrp","age","rating","find","queryParams","songData","CCLI_Ref","transformedSongs","loadedSongs","songtitle","author","ccliref","copyright","pacegrp","lastplay","musicalkey","tempo","songId","updatedsongs","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\nimport { Song } from './song.model';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'enlightWeb';\n  icon = '../../assets/Images/logo.png';\n  storedSongs: Song[] = [];\n}\n","<div class=\"container-fluid\">\n  <nav class=\"navbar navbar-expand-sm bg-dark navbar-dark\">\n    <div class=\"navbar-nav\">\n      <a class=\"nav-item nav-link\" routerLink=\"/\">Home</a>\n      <a class=\"nav-item nav-link\" routerLink=\"/BuildSet\">Build Set</a>\n      <a class=\"nav-item nav-link\" routerLink=\"/EditSong\">Edit/Add Song</a>\n      <a class=\"nav-item nav-link\" routerLink=\"/LeadSheet\">Lead Sheets</a>\n      <a class=\"nav-item nav-link\" routerLink=\"/Login\">Login</a>\n    </div>\n  </nav>\n  <div class=\"body\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { appRoutingModule } from './app.routing';\nimport { SortablejsModule } from 'ngx-sortablejs';\n\nimport { LoginComponent } from './login/login.component';\nimport { BuildSetComponent } from './build-set/build-set.component';\nimport { EditSongComponent } from './edit-song/edit-song.component';\nimport { LeadSheetComponent } from './lead-sheet/lead-sheet.component';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ScrollSongsComponent } from './scroll-songs/scroll-songs.component';\nimport { SetComponent } from './set/set.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { SetContextMenuComponent } from './set-context-menu/set-context-menu.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    BuildSetComponent,\n    EditSongComponent,\n    LeadSheetComponent,\n    ScrollSongsComponent,\n    SetComponent,\n    SetContextMenuComponent\n  ],\n  imports: [\n    BrowserModule,\n    appRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    NgbModule,\n    SortablejsModule.forRoot({ animation: 150 })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n","import { Routes, RouterModule} from '@angular/router';\r\n\r\nimport { LoginComponent } from './login/login.component';\r\nimport { BuildSetComponent } from './build-set/build-set.component';\r\nimport { EditSongComponent } from './edit-song/edit-song.component';\r\nimport { LeadSheetComponent } from './lead-sheet/lead-sheet.component';\r\n\r\nconst routes: Routes = [\r\n    { path: 'Login', component: LoginComponent},\r\n    { path: 'BuildSet', component: BuildSetComponent},\r\n    { path: 'EditSong', component: EditSongComponent},\r\n    { path: 'LeadSheet', component: LeadSheetComponent},\r\n    { path: '**', redirectTo: ''}\r\n  ];\r\n\r\nexport const appRoutingModule = RouterModule.forRoot(routes);\r\n","import { Component, OnInit, Input, Output } from '@angular/core';\nimport { Song } from '../song.model';\n\n@Component({\n  selector: 'app-build-set',\n  templateUrl: './build-set.component.html',\n  styleUrls: ['./build-set.component.css']\n})\nexport class BuildSetComponent implements OnInit {\n\n  songToSendP: Song;\n  @Input() receivedC: Song;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  receiveSong(song: Song) {\n    this.receivedC = song;\n  }\n\n}\n","<div>\n\n  <app-scroll-songs (SongToSend)=\"receiveSong($event)\"></app-scroll-songs>\n\n</div>\n\n","import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\nimport { Song } from '../song.model';\nimport { SongsService } from '../songs.service';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-edit-song',\n  templateUrl: './edit-song.component.html',\n  styleUrls: ['./edit-song.component.css']\n})\nexport class EditSongComponent {\n\n  hasData = false;\n  setStarted = false;\n  songs: Song[];\n  song: Song;\n\n  setDate: Date = new Date();\n  dateString = '';\n  private songsSub: Subscription;\n\n  isLoading = false;\n  chooseSet = false;\n  ActiveIndex = 0;\n  searchString = '';\n  selectedGroup = '0';\n  selectedAge = '1';\n  selectedRating = '2';\n  sortField = 'SongRef';\n  sortDirection = -1;\n  setList1: any;\n\n  public isHidden = true;\n  xPosTabMenu = 0;\n  yPosTabMenu = 0;\n  indexTabMenu = 0;\n\n  public datepipe: DatePipe;\n  SongRef = null;\n  Title = '';\n  FirstLine = '';\n  Lyrics = '';\n  Author = '';\n  CCLIRef = '';\n  Copyright = '';\n  PaceGrp = '';\n  Rating = 3;\n  LastPlay = null;\n  MusicalKey = '';\n  Tempo = null;\n\n  constructor(public songsService: SongsService) {}\n\n  // tslint:disable-next-line: use-lifecycle-interface\n  ngOnInit() {\n    this.getSongs();\n  }\n\n  getSongs() {\n    this.songsService.getSongs(\n      this.selectedGroup,\n      this.selectedAge,\n      this.selectedRating,\n      this.searchString,\n      this.sortField,\n      this.sortDirection\n      );\n    this.isLoading = true;\n    this.songsSub = this.songsService.getSongUpdateListener()\n      .subscribe((songs: Song[]) => {\n        this.isLoading = false;\n        this.songs = songs;\n        this.song = this.songs[0];\n        this.hasData = true;\n      });\n    console.log('GotSongs');\n  }\n\n  changeSort(field: string) {\n    if (this.sortField === field) {\n      this.sortDirection = -this.sortDirection;\n    }\n    else {\n      this.sortField = field;\n      if (field === 'SongRef') {\n         this.sortDirection = -1;\n      } else {\n         this.sortDirection = 1;\n      }\n    }\n    this.getSongs();\n    this.ActiveIndex = 0;\n}\nselectSong(selectedSong: Song, index: number) {\n  this.hasData = true;\n  this.song = selectedSong;\n  this.ActiveIndex = index;\n}\n\nonAddSong(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n    this.songsService.addSong(\n      null,\n      form.value.SongRef,\n      form.value.Title,\n      form.value.FirstLine,\n      form.value.Lyrics,\n      form.value.Author,\n      form.value.CCLIRef,\n      form.value.Copyright,\n      form.value.PaceGrp,\n      form.value.Rating,\n      form.value.LastPlay,\n      form.value.MusicalKey,\n      form.value.Tempo\n      );\n    form.resetForm();\n  }\n  deleteSong(SelectedSong: Song, index: number) {\n    if (!this.hasData) {\n      return;\n    }\n    this.songsService.deleteSong(this.song.id);\n    console.log(this.song.id);\n  }\n  // tslint:disable-next-line: use-lifecycle-interface\n  ngOnDestroy() {\n    this.songsSub.unsubscribe();\n  }\n\n}\n","<div>\n    <h4>Add/Edit Song</h4>\n  <div class=\"editsong\">\n\n    <div class=\"tableSection col-md-6\">\n      <div class=\"filter sticky-top container-fluid\">\n        <div class=\"btn-group\">\n          <input id=\"searchinput\" type=\"search\" class=\"form-control\" placeholder=\"Search\" [(ngModel)]=\"searchString\"\n            (change)=\"ngOnInit()\">\n          <div id=\"searchclear\" class=\"glyphicon glyphicon-remove-circle\"></div>\n        </div>\n        <div class=\"drop-filter d-inline-block btn-group\" (change)=\"ngOnInit()\">\n          <select id=\"PaceGrp\" [(ngModel)]=\"selectedGroup\" class=\"mr-0 drop-filter d-inline-block form-control\">\n            <option value=\"0\" selected>Standard</option>\n            <option value=\"1\">Fast</option>\n            <option value=\"2\">Medium</option>\n            <option value=\"3\">Slow</option>\n            <option value=\"4\">School</option>\n            <option value=\"5\">Christmas</option>\n            <option value=\"6\">All</option>\n          </select>\n        </div>\n        <div class=\"drop-filter d-inline-block btn-group\" (change)=\"ngOnInit()\">\n          <select id=\"PaceGrp\" [(ngModel)]=\"selectedAge\" class=\"mr-0 drop-filter d-inline-block form-control\">\n            <option value=\"1\" selected>Recent</option>\n            <option value=\"2\">2 years</option>\n            <option value=\"3\">3 years</option>\n            <option value=\"10\">All</option>\n          </select>\n        </div>\n        <div class=\"drop-filter d-inline-block btn-group\" (change)=\"ngOnInit()\">\n          <select id=\"Rating\" [(ngModel)]=\"selectedRating\" class=\"mr-0 drop-filter d-inline-block form-control\">\n            <option value=\"4\">Rating 5</option>\n            <option value=\"3\">Rating 4+</option>\n            <option value=\"2\" selected>Rating 3+</option>\n            <option value=\"1\">Rating 2+</option>\n            <option value=\"0\">All Songs</option>\n          </select>\n        </div>\n        <div class=\"drop-filter d-inline-block btn-group\" (change)=\"ngOnInit()\">\n          <button class=\"btn btn-add btn-primary\">+New Song</button>\n        </div>\n        <div>\n          <table>\n            <tr>\n              <td class=\"hdr_Ref sortable\" (click)='changeSort(\"SongRef\")'>Ref</td>\n              <td class=\"hdr_Title sortable\" (click)='changeSort(\"SongTitle\")'>Title</td>\n              <td class=\"hdr_FirstLine sortable\" (click)='changeSort(\"FirstLine\")'>First Line</td>\n              <td class=\"hdr_Key sortable\" (click)='changeSort(\"MusicalKey\")'>Key</td>\n            </tr>\n          </table>\n        </div>\n      </div>\n      <div>\n        <div *ngIf=\"isLoading\" class=\"waiting\">\n          <div class=\"spinner-border\" role=\"status\">\n            <div class=\"sr-only\"></div>\n          </div>\n        </div>\n        <div *ngIf=\"!isLoading\">\n          <table>\n            <tr class=\"picker\" *ngFor=\"let song of songs; let index = index\" id=\"song-{{index}}\"\n            (mouseup)=\"selectSong(song, index)\"\n              [class.active]=\"index == ActiveIndex\">\n              <td class=\"col_Ref\">{{song.SongRef}}</td>\n              <td class=\"col_Title clipped\">{{song.SongTitle}}</td>\n              <td class=\"col_FirstLine clipped\">{{song.FirstLine}}</td>\n              <td class=\"col_key\">{{song.MusicalKey}}</td>\n              <td #song style=\"display:none\">{{song}}</td>\n            </tr>\n          </table>\n        </div>\n      </div>\n    </div>\n    <form (submit)=\"onAddSong(songForm)\" #songForm=\"ngForm\" class=\"songpage\">\n      <div class=\"buttons\">\n        <label for=\"SongRef\" class=\"mb-6\">Song Ref:</label>\n        <input id=\"SongRef\" type=\"int\" class=\"form-control mb-6 btn songref\" placeholder=\"0\" value=\"{{song.SongRef}}\"  name=\"SongRef\" ngModel>\n        <button type=\"submit\" class=\"btn btn-primary mb-6\">Save</button>\n        <button type=\"Delete\" class=\"btn btn-primary mb-6\" (click)='deleteSong(song, ActiveIndex)'>Delete</button>\n        <button type=\"cancel\" class=\"btn btn-primary mb-6\">Cancel</button>\n      </div>\n      <div class=\"form-row\">\n          <div class=\"form-group col-md-12\" *ngIf=\"hasData\">\n            <div *ngIf=\"hasData\">\n              <label for=\"SongTitle\">Song Title</label>\n              <input id=\"SongTitle\" type=\"text\" class=\"form-control\" placeholder=\"Song Title\" value=\"{{song.SongTitle}}\" name=\"Title\" ngModel>\n              <label for=\"FirstLine\">First Line</label>\n              <input id=\"FirstLine\" type=\"text\" class=\"form-control\"  placeholder=\"First Line\" value=\"{{song.FirstLine}}\" name=\"FirstLine\" ngModel>\n              <label for=\"Lyrics\">Lyrics</label>\n              <textarea id=\"Lyrics\" type=\"text\" class=\"form-control\" rows=\"10\" placeholder=\"Lyrics\" value=\"{{song.Lyrics}}\" name=\"Lyrics\" ngModel></textarea>\n              <label for=\"Author\">Author</label>\n              <textarea id=\"Author\" type=\"text\" class=\"form-control\" rows=\"3\" placeholder=\"Artist\" value=\"{{song.Author}}\" name=\"Author\" ngModel></textarea>\n              <label for=\"Rating\">Rating</label>\n              <select class=\"form-control\" id=\"RatingSelect\" name=\"Rating\" value=\"{{song.Rating}}\" ngModel>\n                <option>5</option>\n                <option>4</option>\n                <option>3</option>\n                <option>2</option>\n                <option>1</option>\n             </select>\n\n              <label for=\"Pace/Group\">Pace Group</label>\n              <select class=\"form-control\" id=\"PaceSelect\" name=\"PaceGrp\" value=\"{{song.PaceGrp}}\" ngModel>\n                <option>Fast - Praise</option>\n                <option>Medium</option>\n                <option>Slow - Worship</option>\n                <option>Christmas</option>\n                <option>Kids/School</option>\n              </select>\n              <label for=\"MusicalKey\">Musical Key</label>\n              <select class=\"form-control\" id=\"KeySelect\" name=\"MusicalKey\" value=\"{{song.MusicalKey}}\" ngModel>\n                <option>A</option>\n                <option>Bb</option>\n                <option>B</option>\n                <option>C</option>\n                <option>C#</option>\n                <option>D</option>\n                <option>Eb</option>\n                <option>E</option>\n                <option>F</option>\n                <option>F#</option>\n                <option>G</option>\n                <option>Ab</option>\n              </select>\n              <label for=\"Copyright\">Copyright</label>\n              <textarea id=\"Copyright\" type=\"text\" class=\"form-control\" rows=\"3\" placeholder=\"Copyright\" value=\"{{song.Copyright}}\" name=\"Copyright\" ngModel></textarea>\n              <label for=\"CCLI_Ref\">CCLI Reference</label>\n              <Input id=\"CCLI_Ref\" type=\"text\" class=\"form-control\" placeholder=\"CCLI_Ref\" value=\"{{song.CCLI_Ref}}\" name=\"CCLI_Ref\" ngModel>\n              <label for=\"Tempo\">Tempo</label>\n              <Input id=\"Tempo\" type=\"text\" class=\"form-control\" placeholder=\"Tempo\" value=\"{{song.Tempo}}\" name=\"Tempo\" ngModel>\n              <label for=\"LastPlay\">Last Used</label>\n              <Input id=\"LastPlay\" type=\"text\" class=\"form-control\" placeholder=\"---\" name=\"LastPlay\" ngModel>\n            </div>\n            <div *ngIf=\"!hasData\">\n              <label for=\"SongTitle\">Song Title</label>\n              <input id=\"SongTitle\" type=\"text\" class=\"form-control\" placeholder=\"Song Title\" name=\"Title\" ngModel>\n              <label for=\"FirstLine\">First Line</label>\n              <input id=\"FirstLine\" type=\"text\" class=\"form-control\"  placeholder=\"First Line\" name=\"FirstLine\" ngModel>\n              <label for=\"Lyrics\">Lyrics</label>\n              <textarea id=\"Lyrics\" type=\"text\" class=\"form-control\" rows=\"10\" placeholder=\"Lyrics\" name=\"Lyrics\" ngModel></textarea>\n              <label for=\"Author\">Author</label>\n              <textarea id=\"Author\" type=\"text\" class=\"form-control\" rows=\"3\" placeholder=\"Artist\" name=\"Author\" ngModel></textarea>\n              <label for=\"Rating\">Rating</label>\n              <select class=\"form-control\" id=\"RatingSelect\" name=\"Rating\" ngModel>\n                <option>5</option>\n                <option>4</option>\n                <option>3</option>\n                <option>2</option>\n                <option>1</option>\n             </select>\n\n              <label for=\"Pace/Group\">Pace Group</label>\n              <select class=\"form-control\" id=\"PaceSelect\" name=\"PaceGrp\" ngModel>\n                <option>Fast - Praise</option>\n                <option>Medium</option>\n                <option>Slow - Worship</option>\n                <option>Christmas</option>\n                <option>Kids/School</option>\n              </select>\n              <label for=\"MusicalKey\">Musical Key</label>\n              <select class=\"form-control\" id=\"KeySelect\" name=\"MusicalKey\" ngModel>\n                <option>A</option>\n                <option>Bb</option>\n                <option>B</option>\n                <option>C</option>\n                <option>C#</option>\n                <option>D</option>\n                <option>Eb</option>\n                <option>E</option>\n                <option>F</option>\n                <option>F#</option>\n                <option>G</option>\n                <option>Ab</option>\n              </select>\n              <label for=\"Copyright\">Copyright</label>\n              <textarea id=\"Copyright\" type=\"text\" class=\"form-control\" rows=\"3\" placeholder=\"Copyright\" name=\"Copyright\" ngModel></textarea>\n              <label for=\"CCLI_Ref\">CCLI Reference</label>\n              <Input id=\"CCLI_Ref\" type=\"text\" class=\"form-control\" placeholder=\"CCLI_Ref\" name=\"CCLI_Ref\" ngModel>\n              <label for=\"Tempo\">Tempo</label>\n              <Input id=\"Tempo\" type=\"text\" class=\"form-control\" placeholder=\"Tempo\" name=\"Tempo\" ngModel>\n              <label for=\"LastPlay\">Last Used</label>\n              <Input id=\"LastPlay\" type=\"text\" class=\"form-control\" placeholder=\"---\" name=\"LastPlay\" ngModel>\n              </div>\n              <br/>\n          </div>\n      </div>\n    </form>\n\n  </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-lead-sheet',\n  templateUrl: './lead-sheet.component.html',\n  styleUrls: ['./lead-sheet.component.css']\n})\nexport class LeadSheetComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>lead-sheet works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n","<div class=\"d-flex justify-content-center topgap\">\n\n    <form class=\"form-signin text-center\">\n <!--       <img class=\"mb-4\" src=\"../../assets//Images/logo.png\" alt=\"EnlightWeb\" width=\"72\" height=\"72\">   -->\n        <h5 class=\"h5 mb-3 font-weight-normal\">Please sign in:</h5>\n        <div class=\"form-group\">\n          <label for=\"inputEmail\" class=\"sr-only\">Email address</label>\n          <input type=\"email\" id=\"inputEmail\" class=\"form-control\" placeholder=\"Email address\" required=\"\" autofocus=\"\" data-keeper-lock-id=\"k-2rddtlntpqn\">\n        </div>\n        <div class=\"form-group\">\n          <label for=\"inputPassword\" class=\"sr-only\">Password</label>\n          <input type=\"password\" id=\"inputPassword\" class=\"form-control\" placeholder=\"Password\" required=\"\" data-keeper-lock-id=\"k-ru8khuxbtf\">\n        </div>\n        <div class=\"checkbox mb-3\">\n          <label>\n            <input type=\"checkbox\" value=\"remember-me\"> Remember me\n          </label>\n        </div>\n        <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in</button>\n    </form>\n\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { Song } from '../song.model';\nimport { Set, setRow } from '../set.model';\n\nimport { SongsService } from '../songs.service';\nimport { SetsService } from '../sets.service';\nimport { DatePipe } from '@angular/common';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\n\n@Component({\n  selector: 'app-scroll-songs',\n  templateUrl: './scroll-songs.component.html',\n  styleUrls: ['./scroll-songs.component.css']\n})\n\n\n\nexport class ScrollSongsComponent implements OnInit, OnDestroy {\n  hasData = false;\n  setStarted = false;\n  songs: Song[];\n  song: Song;\n  sets: Set[];\n  set: Set;\n  setList: Set[] = [];\n  setRows: setRow[] = [];\n  newSet: Set;\n  newRow: setRow;\n  setDate: Date = new Date();\n  dateString = '';\n  private songsSub: Subscription;\n  private setsSub: Subscription;\n\n  constructor(public songsService: SongsService,\n              public setsService: SetsService) {}\n\n\n  isLoading = false;\n  chooseSet = false;\n  ActiveIndex = 0;\n  searchString = '';\n  selectedGroup = '0';\n  selectedAge = '1';\n  selectedRating = '2';\n  sortField = 'SongRef';\n  sortDirection = -1;\n  setList1: any;\n\n  public isHidden = true;\n  xPosTabMenu = 0;\n  yPosTabMenu = 0;\n  indexTabMenu = 0;\n\n  public datepipe: DatePipe;\n\n  ngOnInit() {\n    this.getSongs();\n  }\n\n  getSongs() {\n    this.songsService.getSongs(\n      this.selectedGroup,\n      this.selectedAge,\n      this.selectedRating,\n      this.searchString,\n      this.sortField,\n      this.sortDirection\n      );\n    this.isLoading = true;\n    this.songsSub = this.songsService.getSongUpdateListener()\n      .subscribe((songs: Song[]) => {\n        this.isLoading = false;\n        this.songs = songs;\n        this.song = this.songs[0];\n        this.hasData = true;\n      });\n  }\n\n  showLyrics(selectedSong: Song, index: number) {\n    this.hasData = true;\n    this.song = selectedSong;\n    this.ActiveIndex = index;\n  }\n\n  changeSort(field: string) {\n      if (this.sortField === field) {\n        this.sortDirection = -this.sortDirection;\n      }\n      else {\n        this.sortField = field;\n        if (field === 'SongRef') {\n           this.sortDirection = -1;\n        } else {\n           this.sortDirection = 1;\n        }\n      }\n      this.getSongs();\n      this.ActiveIndex = 0;\n  }\n\n  addtoSet(song: Song) {\n\n     const newRow: setRow = new setRow();\n     newRow.Seq = 'S';\n     newRow.Key = song.MusicalKey;\n     newRow.FirstLine = song.FirstLine;\n     newRow.SongRef = song.SongRef;\n     newRow.Title = song.SongTitle;\n     newRow.Lyrics = song.Lyrics;\n     newRow.Style = 'Std';\n     this.setRows.splice(this.setRows.length, 0 , newRow);\n     this.setStarted = true;\n  }\n\n  onDateSelected() {\n    console.log(this.setDate);\n    const d: Date = this.setDate;\n    console.log();\n    console.log(d.getFullYear);\n    console.log(this.setDate.getFullYear);\n  }\n\n  loadTemplate() {\n    let newRow: setRow = new setRow();\n    newRow.Seq = 'AM';\n    newRow.Title = '';\n    newRow.Style = 'time';\n    this.setRows.splice(this.setRows.length, 0 , newRow);\n    newRow = new setRow();\n    newRow.Style = 'splitter';\n    this.setRows.splice(this.setRows.length, 0 , newRow);\n    newRow = new setRow();\n    newRow.Style = 'splitter';\n    this.setRows.splice(this.setRows.length, 0 , newRow);\n    newRow = new setRow();\n    newRow.Style = 'splitter';\n    this.setRows.splice(this.setRows.length, 0 , newRow);\n    newRow = new setRow();\n    newRow.Seq = 'PM';\n    newRow.Title = '';\n    newRow.Style = 'time';\n    this.setRows.splice(this.setRows.length, 0 , newRow);\n    newRow = new setRow();\n    newRow.Style = 'splitter';\n    this.setRows.splice(this.setRows.length, 0 , newRow);\n    newRow = new setRow();\n    newRow.Style = 'splitter';\n    this.setRows.splice(this.setRows.length, 0 , newRow);\n    newRow = new setRow();\n    newRow.Style = 'splitter';\n    this.setRows.splice(this.setRows.length, 0 , newRow);\n    this.setStarted = true;\n  }\n  clearSet() {\n    this.setRows.length = 0;\n  }\n\n  showMenuOptions() {\n    return 'Delete;AM Title;PM Title;Spacer;Standard Song;Pre Song;Extra Song';\n}\n\n\nrightClick(event, index) {\n  event.stopPropagation();\n  this.xPosTabMenu = event.clientX;\n  this.yPosTabMenu = event.clientY;\n  this.indexTabMenu = index;\n  this.isHidden = false;\n  return false;\n}\n\ncloseRightClickMenu() {\n  this.isHidden = true;\n}\n\nhandleMenuSelection( menuselection: string) {\n  if ( menuselection === 'Delete') {\n    this.setRows.splice(this.indexTabMenu, 1);\n  } else if ( menuselection === 'Standard Song') {\n    this.setRows[this.indexTabMenu].Style = 'song';\n    this.setRows[this.indexTabMenu].Seq = 'S';\n  } else if ( menuselection === 'Pre Song') {\n    this.setRows[this.indexTabMenu].Style = 'Pre';\n    this.setRows[this.indexTabMenu].Seq = 'P';\n  } else if ( menuselection === 'Extra Song') {\n    this.setRows[this.indexTabMenu].Style = 'Extra';\n    this.setRows[this.indexTabMenu].Seq = 'X';\n  }\n}\n\n\ntransformDate(date) {\n  return this.datepipe.transform(date, 'yyyy-MM-dd');\n}\n\ngetSets() {\n  this.chooseSet = true;\n  this.setsService.getSets(\n    );\n  this.setsSub = this.setsService.getSetUpdateListener()\n    .subscribe((sets: Set[]) => {\n      this.sets = sets;\n      this.set = this.sets[0];\n      this.hasData = true;\n    });\n}\n\n  ngOnDestroy() {\n    this.songsSub.unsubscribe();\n  }\n\n}\n","<div class=\"component\">\n  <div class=\"lyricsSection\">\n    <div class=\"form-group\">\n      <div *ngIf=\"hasData\">\n        <p class=\"title clipped\">{{song.SongTitle}}</p>\n        <p class=\"firstline clipped\">{{song.FirstLine}}</p>\n        <p class=\"lyrics\">{{song.Lyrics}}</p>\n      </div>\n      <div *ngIf=\"!hasData\">No Data</div>\n    </div>\n  </div>\n  <div class=\"tableSection\">\n    <div class=\"filter sticky-top container-fluid\">\n      <div class=\"btn-group\">\n        <input id=\"searchinput\" type=\"search\" class=\"form-control\" placeholder=\"Search\" [(ngModel)]=\"searchString\"\n          (change)=\"ngOnInit()\">\n        <div id=\"searchclear\" class=\"glyphicon glyphicon-remove-circle\"></div>\n      </div>\n      <div class=\"drop-filter d-inline-block btn-group\" (change)=\"ngOnInit()\">\n        <select id=\"PaceGrp\" [(ngModel)]=\"selectedGroup\" class=\"mr-0 drop-filter d-inline-block form-control\">\n          <option value=\"0\" selected>Standard</option>\n          <option value=\"1\">Fast</option>\n          <option value=\"2\">Medium</option>\n          <option value=\"3\">Slow</option>\n          <option value=\"4\">School</option>\n          <option value=\"5\">Christmas</option>\n          <option value=\"6\">All</option>\n        </select>\n      </div>\n      <div class=\"drop-filter d-inline-block btn-group\" (change)=\"ngOnInit()\">\n        <select id=\"PaceGrp\" [(ngModel)]=\"selectedAge\" class=\"mr-0 drop-filter d-inline-block form-control\">\n          <option value=\"1\" selected>Recent</option>\n          <option value=\"2\">2 years</option>\n          <option value=\"3\">3 years</option>\n          <option value=\"10\">All</option>\n        </select>\n      </div>\n      <div class=\"drop-filter d-inline-block btn-group\" (change)=\"ngOnInit()\">\n        <select id=\"Rating\" [(ngModel)]=\"selectedRating\" class=\"mr-0 drop-filter d-inline-block form-control\">\n          <option value=\"4\">Rating 5</option>\n          <option value=\"3\">Rating 4+</option>\n          <option value=\"2\" selected>Rating 3+</option>\n          <option value=\"1\">Rating 2+</option>\n          <option value=\"0\">All Songs</option>\n        </select>\n      </div>\n      <div>\n        <table>\n          <tr>\n            <td class=\"hdr_Ref sortable\" (click)='changeSort(\"SongRef\")'>Ref</td>\n            <td class=\"hdr_Title sortable\" (click)='changeSort(\"SongTitle\")'>Title</td>\n            <td class=\"hdr_FirstLine sortable\" (click)='changeSort(\"FirstLine\")'>First Line</td>\n            <td class=\"hdr_Key sortable\" (click)='changeSort(\"MusicalKey\")'>Key</td>\n            <td class=\"hdr_Key\">Add</td>\n          </tr>\n        </table>\n      </div>\n    </div>\n    <div>\n      <div *ngIf=\"isLoading\" class=\"waiting\">\n        <div class=\"spinner-border\" role=\"status\">\n          <div class=\"sr-only\"></div>\n        </div>\n      </div>\n      <div *ngIf=\"!isLoading\">\n        <table>\n          <tr class=\"picker\" *ngFor=\"let song of songs; let index = index\" id=\"song-{{index}}\"\n            (mouseup)=\"showLyrics(song, index)\"\n            (dblclick)=\"addtoSet(song)\"\n            [class.active]=\"index == ActiveIndex\">\n            <td class=\"col_Ref\">{{song.SongRef}}</td>\n            <td class=\"col_Title clipped\">{{song.SongTitle}}</td>\n            <td class=\"col_FirstLine clipped\">{{song.FirstLine}}</td>\n            <td class=\"col_key\">{{song.MusicalKey}}</td>\n            <td><img src=\"../../assets/Images/ToList.png\" alt=\" \" width=\"14\" height=\"14\" (click)=\"addtoSet(song)\"></td>\n            <td #song style=\"display:none\">{{song}}</td>\n          </tr>\n        </table>\n      </div>\n    </div>\n  </div>\n  <div></div>\n  <div class=\"setSection\" (click)=\"closeRightClickMenu()\">\n\n    <div class=\"setHeader sticky-top container-fluid\">\n\n\n      <form class=\"form-inline\">\n        <div class=\"form-group\">\n          <div class=\"input-group\">\n            <div class=\"setdatetitle\">Set Date:</div>\n <!--          <input class=\"form-control\" placeholder=\"dd-mm-yyyy\"\n                   name=\"dp\" type=\"date\"  [(ngModel)]=\"setDate\" (change)=\"onDateSelected()\" >  -->\n         <input class=\"form-control\" placeholder=\"yyyy-mm-dd\"\n                   name=\"dp\" [(ngModel)]=\"setDate\" ngbDatepicker #dp=\"ngbDatepicker\" (dateSelect)=\"onDateSelected()\">\n            <div class=\"input-group-append\">\n              <button class=\"btn calendar\" (click)=\"dp.toggle()\" type=\"button\">\n                <img width=\"28px\" title=\"Pick Date\" src=\"..\\..\\assets\\Images\\cal.png\"/>\n              </button>\n            </div>\n\n            <button class=\"btn\" type=\"button\"><img width=\"28px\" title=\"Load Template\" (click)=\"loadTemplate()\" src=\"..\\..\\assets\\Images\\add_template.png\"/></button>\n            <button class=\"btn\" type=\"button\"><img width=\"28px\" title=\"Clear Set\" (click)=\"clearSet()\" src=\"..\\..\\assets\\Images\\erase_document.png\"/></button>\n            <button class=\"btn\" type=\"button\"><img width=\"28px\" title=\"Load Set\" (click)=\"getSets()\" src=\"..\\..\\assets\\Images\\load_document.png\"/></button>\n            <button class=\"btn\" type=\"button\"><img width=\"28px\" title=\"Save Set\" src=\"..\\..\\assets\\Images\\save_document.png\"/></button>\n            <button class=\"btn\" type=\"button\"><img width=\"28px\" title=\"Export to Word\" src=\"..\\..\\assets\\Images\\Export_document.png\"/></button>\n          </div>\n        </div>\n      </form>\n    </div>\n\n    <p *ngIf=\"!setStarted\">Set Not Started</p>\n\n\n    <div [sortablejs]=\"setList\" [sortablejsOptions]=\"{ animation: 150 }\">\n       <div class=\"setitem\" *ngFor=\"let set of setRows; let index = index\" id=\"{{set.Style}}\" (contextmenu)=\"rightClick($event, index)\">\n         <div class=\"rowseq\">{{set.Seq}}</div>\n         <div class=\"rowtitle\">{{ set.Title }}</div>\n         <div class=\"rowfirstline\">{{ set.FirstLine }}</div>\n         <div class=\"rowkey\">{{set.Key}}</div>\n       </div>\n    </div>\n\n    <div *ngIf=\"chooseSet\">\n      <div class=\"setFile\" *ngFor=\"let set of sets; let index = index\" id=\"{{set.SetName}}\">\n        {{set.SetName}}\n      </div>\n    </div>\n    <app-set-context-menu *ngIf=\"!isHidden\" [x]=\"xPosTabMenu\" [y]=\"yPosTabMenu\" [menuitems]=\"showMenuOptions()\" [index]=\"indexTabMenu\" (menuItemSelected)=\"handleMenuSelection($event)\"></app-set-context-menu>\n\n    <hr>\n\n    <div class=\"sticky-bottom setFooter container-fluid\">\n\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-set-context-menu',\n  templateUrl: './set-context-menu.component.html',\n  styleUrls: ['./set-context-menu.component.css']\n})\nexport class SetContextMenuComponent implements OnInit {\n\n  @Input() x = 0;\n  @Input() y = 0;\n  @Input() menuitems = '';\n  @Input() index = 0;\n  theMenuItems = [];\n  @Output() menuItemSelected = new EventEmitter();\n\n  constructor() { }\n\n  outputSelectedMenuItem( menuitem: string) {\n    this.menuItemSelected.emit(menuitem);\n  }\n\n  ngOnInit() {\n    this.theMenuItems = this.menuitems.split(';');\n  }\n}\n","<div class=\"menu\" [ngStyle]=\"{'left.px': x, 'top.px': y}\">\n  <ul class=\"list-group\">\n    <li class=\"list-group-item ngbButton\" *ngFor=\"let menuItem of theMenuItems\">\n      <div type=\"button\" class=\"ngbButtonLabel\" (click)=\"outputSelectedMenuItem(menuItem)\">{{ menuItem }}</div>\n    </li>\n  </ul>\n</div>\n","export class Set {\r\n  id: string;\r\n  SetName: string;\r\n  SetRow: setRow;\r\n}\r\n\r\nexport class setRow {\r\n  Seq: string;\r\n  Title: string;\r\n  FirstLine: string;\r\n  Key: string;\r\n  SongRef: number;\r\n  Lyrics: string;\r\n  Style: string;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-set',\n  templateUrl: './set.component.html',\n  styleUrls: ['./set.component.css']\n})\nexport class SetComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>set works!</p>\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Subject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { Set } from './set.model';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class SetsService {\r\n  private sets: Set[] = [];\r\n  private setsUpdated = new Subject<Set[]>();\r\n  private setId: string;\r\n\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  getSets() {\r\n\r\n    this.http\r\n      .get<{ message: string; sets: any }>(\r\n        'http://localhost:3000/api/sets'\r\n      )\r\n      .pipe(map((setData) => {\r\n        return setData.sets.map(set => {\r\n          return {\r\n            SetName: set.SetName,\r\n            Seq: set.Seq,\r\n            Title: set.Title,\r\n            FirstLine: set.FirstLine,\r\n            Key: set.Key,\r\n            SongRef: set.SongRef,\r\n            Lyrics: set.Lyrics,\r\n            Style: set.Style,\r\n            id: set._id\r\n          };\r\n        });\r\n      }))\r\n      .subscribe(transformedSets => {\r\n        this.sets = transformedSets;\r\n        this.setsUpdated.next([...this.sets]);\r\n      });\r\n  }\r\n\r\n  getSet(id: string) {\r\n    return this.http\r\n    .get<{ message: string; sets: any }>(\r\n      'http://localhost:3000/api/sets'\r\n      )\r\n    .pipe(map((setData) => {\r\n        return setData.sets.map(set => {\r\n          return {\r\n            SetName: set.SetName,\r\n            Seq: set.Seq,\r\n            Title: set.Title,\r\n            FirstLine: set.FirstLine,\r\n            Key: set.Key,\r\n            SongRef: set.SongRef,\r\n            Lyrics: set.Lyrics,\r\n            Style: set.Style,\r\n            id: set._id\r\n          };\r\n        });\r\n      }))\r\n      .subscribe(loadedSets => {\r\n        this.sets = loadedSets;\r\n        this.setsUpdated.next([...this.sets]);\r\n    });\r\n  }\r\n\r\n  getSetUpdateListener() {\r\n    return this.setsUpdated.asObservable();\r\n  }\r\n\r\n  addSet(\r\n          id: string,\r\n          setname: string,\r\n          seq: string,\r\n          title: string,\r\n          firstline: string,\r\n          key: string,\r\n          songref: number,\r\n          lyrics: string,\r\n          style: string ) {\r\n    const set: Set = {\r\n      id: null,\r\n      SetName: setname,\r\n      SetRow: {\r\n        Seq: seq,\r\n        Title: title,\r\n        FirstLine: firstline,\r\n        Key: key,\r\n        SongRef: songref,\r\n        Lyrics: lyrics,\r\n        Style: style\r\n      }\r\n\r\n    };\r\n    this.http\r\n      .post<{message: string, setId: string }>(\r\n          'http://localhost:3000/api/sets', set\r\n          )\r\n      .subscribe(responseData => {\r\n        // tslint:disable-next-line: no-shadowed-variable\r\n        const id = responseData.setId;\r\n        set.id = id;\r\n        this.sets.push(set);\r\n        this.setsUpdated.next([...this.sets]);\r\n      });\r\n    }\r\n\r\n    deleteSet(setId: string) {\r\n      this.http.delete(\r\n        'http://localhost:3000/api/sets/' + setId\r\n        )\r\n        .subscribe(() => {\r\n          console.log(setId);\r\n          const updatedsets = this.sets.filter(post => post.id !== setId);\r\n          this.sets = updatedsets;\r\n          this.setsUpdated.next([...this.sets]);\r\n        });\r\n    }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Subject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { Song } from './song.model';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class SongsService {\r\n  private songs: Song[] = [];\r\n  private songsUpdated = new Subject<Song[]>();\r\n  private songId: string;\r\n\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  getSongs(paceGrp: string, age: string, rating: string, find: string, sortField: string, sortDirection: number) {\r\n    const queryParams = `?pace=${paceGrp}&age=${age}&rating=${rating}&find=${find}&sortField=${sortField}&sortDirection=${sortDirection}`;\r\n\r\n    this.http\r\n      .get<{ message: string; songs: any }>(\r\n        'http://localhost:3000/api/songs' + queryParams\r\n      )\r\n      .pipe(map((songData) => {\r\n        return songData.songs.map(song => {\r\n          return {\r\n            SongRef: song.SongRef,\r\n            SongTitle: song.SongTitle,\r\n            FirstLine: song.FirstLine,\r\n            Lyrics: song.Lyrics,\r\n            Author: song.Author,\r\n            CCLI_Ref: song.CCLI_Ref,\r\n            Copyright: song.Copyright,\r\n            PaceGrp: song.PaceGrp,\r\n            Rating: song.Rating,\r\n            LastPlay: song.LastPlay,\r\n            MusicalKey: song.MusicalKey,\r\n            Tempo: song.Tempo,\r\n            id: song._id\r\n          };\r\n        });\r\n      }))\r\n      .subscribe(transformedSongs => {\r\n        this.songs = transformedSongs;\r\n        this.songsUpdated.next([...this.songs]);\r\n      });\r\n  }\r\n\r\n  getSong(id: string) {\r\n    return this.http\r\n    .get<{ message: string; songs: any }>(\r\n      'http://localhost:3000/api/songs'\r\n      )\r\n    .pipe(map((songData) => {\r\n        return songData.songs.map(song => {\r\n          return {\r\n            SongRef: song.SongRef,\r\n            SongTitle: song.SongTitle,\r\n            FirstLine: song.FirstLine,\r\n            Lyrics: song.Lyrics,\r\n            Author: song.Author,\r\n            CCLI_Ref: song.CCLI_Ref,\r\n            Copyright: song.Copyright,\r\n            PaceGrp: song.PaceGrp,\r\n            Rating: song.Rating,\r\n            LastPlay: song.LastPlay,\r\n            MusicalKey: song.MusicalKey,\r\n            Tempo: song.Tempo,\r\n            id: song._id\r\n          };\r\n        });\r\n      }))\r\n      .subscribe(loadedSongs => {\r\n        this.songs = loadedSongs;\r\n        this.songsUpdated.next([...this.songs]);\r\n    });\r\n  }\r\n\r\n  getSongUpdateListener() {\r\n    return this.songsUpdated.asObservable();\r\n  }\r\n\r\n  addSong(\r\n          id: string,\r\n          songref: number,\r\n          songtitle: string,\r\n          firstline: string,\r\n          lyrics: string,\r\n          author: string,\r\n          ccliref: string,\r\n          copyright: string,\r\n          pacegrp: number,\r\n          rating: number,\r\n          lastplay: Date,\r\n          musicalkey: string,\r\n          tempo: number ) {\r\n    const song: Song = {\r\n      id: null,\r\n      SongRef: songref,\r\n      SongTitle: songtitle,\r\n      FirstLine: firstline,\r\n      Lyrics: lyrics,\r\n      Author: author,\r\n      CCLI_Ref: ccliref,\r\n      Copyright: copyright,\r\n      PaceGrp: pacegrp,\r\n      Rating: rating,\r\n      LastPlay: lastplay,\r\n      MusicalKey: musicalkey,\r\n      Tempo: tempo\r\n    };\r\n    this.http\r\n      .post<{message: string, songId: string }>(\r\n          'http://localhost:3000/api/songs', song\r\n          )\r\n      .subscribe(responseData => {\r\n        // tslint:disable-next-line: no-shadowed-variable\r\n        const id = responseData.songId;\r\n        song.id = id;\r\n        this.songs.push(song);\r\n        this.songsUpdated.next([...this.songs]);\r\n      });\r\n    }\r\n\r\n    deleteSong(songId: string) {\r\n      this.http\r\n        .delete(\r\n          'http://localhost:3000/api/songs/' + songId\r\n          )\r\n        .subscribe(() => {\r\n          const updatedsongs = this.songs.filter(post => post.id !== songId);\r\n          this.songs = updatedsongs;\r\n          this.songsUpdated.next([...this.songs]);\r\n        });\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}