{"version":3,"file":"main-es2015.js","mappings":"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","sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth-interceptor.ts","./src/app/auth/auth.guard.ts","./src/app/auth/auth.service.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/auth/signup/signup.component.ts","./src/app/auth/signup/signup.component.html","./src/app/build-set/build-set.component.ts","./src/app/build-set/build-set.component.html","./src/app/edit-song/edit-song.component.ts","./src/app/edit-song/edit-song.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/lead-sheet/lead-sheet.component.ts","./src/app/lead-sheet/lead-sheet.component.html","./src/app/scroll-songs/scroll-songs.component.ts","./src/app/scroll-songs/scroll-songs.component.html","./src/app/set-context-menu/set-context-menu.component.ts","./src/app/set-context-menu/set-context-menu.component.html","./src/app/set.model.ts","./src/app/set/set.component.ts","./src/app/set/set.component.html","./src/app/sets.service.ts","./src/app/songs.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule} from '@angular/router';\r\n\r\nimport { LoginComponent } from './auth/login/login.component';\r\nimport { SignupComponent } from './auth/signup/signup.component';\r\nimport { BuildSetComponent } from './build-set/build-set.component';\r\nimport { EditSongComponent } from './edit-song/edit-song.component';\r\nimport { LeadSheetComponent } from './lead-sheet/lead-sheet.component';\r\nimport { AuthGuard } from './auth/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  { path: 'Login', component: LoginComponent},\r\n  { path: 'Signup', component: SignupComponent},\r\n  { path: 'BuildSet', component: BuildSetComponent, canActivate: [AuthGuard]},\r\n  { path: 'EditSong', component: EditSongComponent, canActivate: [AuthGuard]},\r\n  { path: 'LeadSheet', component: LeadSheetComponent, canActivate: [AuthGuard]},\r\n  ];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule],\r\n    providers: [AuthGuard]\r\n  })\r\n  export class AppRoutingModule {}\r\n\r\n","import { Component, OnInit } from '@angular/core';\n\nimport { AuthService } from './auth/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  constructor(private authService: AuthService) {}\n\n  ngOnInit() {\n    this.authService.autoAuthUser();\n  }\n}\n","<div class=\"container-fluid\">\n  <app-header></app-header>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { SortablejsModule } from 'ngx-sortablejs';\r\n\r\nimport { LoginComponent } from './auth/login/login.component';\r\nimport { SignupComponent } from './auth/signup/signup.component';\r\nimport { BuildSetComponent } from './build-set/build-set.component';\r\nimport { EditSongComponent } from './edit-song/edit-song.component';\r\nimport { LeadSheetComponent } from './lead-sheet/lead-sheet.component';\r\n\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ScrollSongsComponent } from './scroll-songs/scroll-songs.component';\r\nimport { SetComponent } from './set/set.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { SetContextMenuComponent } from './set-context-menu/set-context-menu.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { AuthInterceptor } from './auth/auth-interceptor';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    SignupComponent,\r\n    BuildSetComponent,\r\n    EditSongComponent,\r\n    LeadSheetComponent,\r\n    ScrollSongsComponent,\r\n    SetComponent,\r\n    SetContextMenuComponent,\r\n    HeaderComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    NgbModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatCardModule,\r\n    MatProgressSpinnerModule,\r\n    SortablejsModule.forRoot({ animation: 150 })\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n\r\n","import {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private authService: AuthService) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    const authToken = this.authService.getToken();\n    const authRequest = req.clone({\n      headers: req.headers.set('Authorization', 'Bearer ' + authToken)\n    });\n    return next.handle(authRequest);\n  }\n}\n","import {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  Router\n} from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean | Observable<boolean> | Promise<boolean> {\n    const isAuth = this.authService.getIsAuth();\n    if (!isAuth) {\n      this.router.navigate(['/login']);\n    }\n    return isAuth;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\n\nimport { AuthData } from './auth-data.model';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  private isAuthenticated = false;\n  private token: string;\n  private tokenTimer: any;\n  private userId: string;\n  private authStatusListener = new Subject<boolean>();\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  getToken() {\n    return this.token;\n  }\n\n  getIsAuth() {\n    return this.isAuthenticated;\n  }\n\n  getUserId() {\n    return this.userId;\n  }\n\n  getAuthStatusListener() {\n    return this.authStatusListener.asObservable();\n  }\n\n  createUser(email: string, password: string) {\n    const authData: AuthData = { email: email, password: password };\n    this.http\n      .post('http://localhost:3000/api/user/signup', authData)\n      .subscribe(() => {\n        this.router.navigate(['/BuildSet']);\n      }, error => {\n        this.authStatusListener.next(false);\n      });\n  }\n\n  login(email: string, password: string) {\n    const authData: AuthData = { email: email, password: password };\n    this.http\n      .post<{ token: string; expiresIn: number; userId: string }>(\n        'http://localhost:3000/api/user/login',\n        authData\n      )\n      .subscribe(response => {\n        const token = response.token;\n        this.token = token;\n        if (token) {\n          const expiresInDuration = response.expiresIn;\n          this.setAuthTimer(expiresInDuration);\n          this.isAuthenticated = true;\n          this.userId = response.userId;\n          this.authStatusListener.next(true);\n          const now = new Date();\n          const expirationDate = new Date(\n            now.getTime() + expiresInDuration * 1000\n          );\n          console.log(expirationDate);\n          this.saveAuthData(token, expirationDate, this.userId);\n          this.router.navigate(['/BuildSet']);\n        }\n      }, error => {\n        this.authStatusListener.next(false);\n      });\n  }\n\n  autoAuthUser() {\n    const authInformation = this.getAuthData();\n    if (!authInformation) {\n      return;\n    }\n    const now = new Date();\n    const expiresIn = authInformation.expirationDate.getTime() - now.getTime();\n    if (expiresIn > 0) {\n      this.token = authInformation.token;\n      this.isAuthenticated = true;\n      this.userId = authInformation.userId;\n      this.setAuthTimer(expiresIn / 1000);\n      this.authStatusListener.next(true);\n    }\n  }\n\n  logout() {\n    this.token = null;\n    this.isAuthenticated = false;\n    this.authStatusListener.next(false);\n    this.userId = null;\n    clearTimeout(this.tokenTimer);\n    this.clearAuthData();\n    this.router.navigate(['/Login']);\n  }\n\n  private setAuthTimer(duration: number) {\n    console.log('Setting timer: ' + duration);\n    this.tokenTimer = setTimeout(() => {\n      this.logout();\n    }, duration * 1000);\n  }\n\n  private saveAuthData(token: string, expirationDate: Date, userId: string) {\n    localStorage.setItem('token', token);\n    localStorage.setItem('expiration', expirationDate.toISOString());\n    localStorage.setItem('userId', userId);\n  }\n\n  private clearAuthData() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expiration');\n    localStorage.removeItem('userId');\n  }\n\n  private getAuthData() {\n    const token = localStorage.getItem('token');\n    const expirationDate = localStorage.getItem('expiration');\n    const userId = localStorage.getItem('userId');\n    if (!token || !expirationDate) {\n      return;\n    }\n    return {\n      token: token,\n      expirationDate: new Date(expirationDate),\n      userId: userId\n    };\n  }\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Component({\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n  isLoading = false;\r\n  private authStatusSub: Subscription;\r\n\r\n  constructor(public authService: AuthService) {}\r\n\r\n  ngOnInit() {\r\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(\r\n      authStatus => {\r\n        this.isLoading = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  onLogin(form: NgForm) {\r\n    if (form.invalid) {\r\n      return;\r\n    }\r\n    this.isLoading = true;\r\n    this.authService.login(form.value.email, form.value.password);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n}\r\n","<div class='parent'>\r\n<mat-card class='child'>\r\n  <form (submit)='onLogin(loginForm)' #loginForm='ngForm' *ngIf='!isLoading'>\r\n    <img mat-card-image class=\"logo\" src=\"..\\..\\..\\assets\\Images\\logo.png\" alt=\"Enlight\">\r\n    <mat-card-title>Login Details</mat-card-title>\r\n    <mat-form-field>\r\n      <input matInput name='email' ngModel type='email' placeholder='E-Mail' #emailInput='ngModel' required email>\r\n      <mat-error *ngIf='emailInput.invalid'>Please enter a valid email.</mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n      <input type='password' name='password' ngModel matInput placeholder='Password' #passwordInput='ngModel' required>\r\n      <mat-error *ngIf='passwordInput.invalid'>Please enter a valid password.</mat-error>\r\n    </mat-form-field>\r\n    <button mat-flat-button color='accent' type='submit' *ngIf='!isLoading'>Login</button>\r\n  </form>\r\n</mat-card>\r\n</div>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Component({\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.css']\r\n})\r\nexport class SignupComponent implements OnInit, OnDestroy {\r\n  isLoading = false;\r\n  private authStatusSub: Subscription;\r\n\r\n  constructor(public authService: AuthService) {}\r\n\r\n  ngOnInit() {\r\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(\r\n      authStatus => {\r\n        this.isLoading = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  onSignup(form: NgForm) {\r\n    if (form.invalid) {\r\n      return;\r\n    }\r\n    this.isLoading = true;\r\n    this.authService.createUser(form.value.email, form.value.password);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n}\r\n","<div class='parent'>\r\n  <mat-card class='child'>\r\n  <form (submit)=\"onSignup(signupForm)\" #signupForm=\"ngForm\" *ngIf=\"!isLoading\">\r\n    <img mat-card-image class=\"logo\" src=\"..\\..\\..\\assets\\Images\\logo.png\" alt=\"Enlight\">\r\n    <mat-card-title>Signup</mat-card-title>\r\n    <mat-form-field>\r\n      <input matInput name=\"email\" ngModel type=\"email\" placeholder=\"E-Mail\" #emailInput=\"ngModel\" required email>\r\n      <mat-error *ngIf=\"emailInput.invalid\">Please enter a valid email.</mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n      <input type=\"password\" name=\"password\" ngModel matInput placeholder=\"Password\" #passwordInput=\"ngModel\" required>\r\n      <mat-error *ngIf=\"passwordInput.invalid\">Please enter a valid password.</mat-error>\r\n    </mat-form-field>\r\n    <button mat-raised-button color=\"accent\" type=\"submit\" *ngIf=\"!isLoading\">Signup</button>\r\n  </form>\r\n</mat-card>\r\n</div>\r\n","import { Component, OnInit, Input, Output } from '@angular/core';\nimport { Song } from '../song.model';\nimport { AuthService } from '../auth/auth.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-build-set',\n  templateUrl: './build-set.component.html',\n  styleUrls: ['./build-set.component.css']\n})\nexport class BuildSetComponent implements OnInit {\n  private authListenerSubs: Subscription;\n  constructor(private authService: AuthService) {}\n\n\n  songToSendP: Song;\n  @Input() receivedC: Song;\n\n\n  ngOnInit(): void {\n    this.authListenerSubs = this.authService.getAuthStatusListener().subscribe();\n  }\n\n  receiveSong(song: Song) {\n    this.receivedC = song;\n  }\n\n}\n","<div>\n  <app-scroll-songs (SongToSend)=\"receiveSong($event)\"></app-scroll-songs>\n</div>\n\n","import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\nimport { Song } from '../song.model';\nimport { SongsService } from '../songs.service';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-edit-song',\n  templateUrl: './edit-song.component.html',\n  styleUrls: ['./edit-song.component.css']\n})\nexport class EditSongComponent {\n\n  hasData = false;\n  setStarted = false;\n  songs: Song[];\n  song: Song;\n\n  setDate: Date = new Date();\n  dateString = '';\n  private songsSub: Subscription;\n\n  isLoading = false;\n  chooseSet = false;\n  ActiveIndex = 0;\n  searchString = '';\n  selectedGroup = '0';\n  selectedAge = '1';\n  selectedRating = '2';\n  sortField = 'SongRef';\n  sortDirection = -1;\n  setList1: any;\n\n  public isHidden = true;\n  xPosTabMenu = 0;\n  yPosTabMenu = 0;\n  indexTabMenu = 0;\n\n  public datepipe: DatePipe;\n  SongRef = null;\n  Title = '';\n  FirstLine = '';\n  Lyrics = '';\n  Author = '';\n  CCLIRef = '';\n  Copyright = '';\n  PaceGrp = '';\n  Rating = 3;\n  LastPlay = null;\n  MusicalKey = '';\n  Tempo = null;\n\n  constructor(public songsService: SongsService) {}\n\n  // tslint:disable-next-line: use-lifecycle-interface\n  ngOnInit() {\n    this.getSongs();\n  }\n\n  getSongs() {\n    this.songsService.getSongs(\n      this.selectedGroup,\n      this.selectedAge,\n      this.selectedRating,\n      this.searchString,\n      this.sortField,\n      this.sortDirection\n      );\n    this.isLoading = true;\n    this.songsSub = this.songsService.getSongUpdateListener()\n      .subscribe((songs: Song[]) => {\n        this.isLoading = false;\n        this.songs = songs;\n        this.song = this.songs[0];\n        this.hasData = true;\n      });\n    console.log('GotSongs');\n  }\n\n  changeSort(field: string) {\n    if (this.sortField === field) {\n      this.sortDirection = -this.sortDirection;\n    }\n    else {\n      this.sortField = field;\n      if (field === 'SongRef') {\n         this.sortDirection = -1;\n      } else {\n         this.sortDirection = 1;\n      }\n    }\n    this.getSongs();\n    this.ActiveIndex = 0;\n}\nselectSong(selectedSong: Song, index: number) {\n  this.hasData = true;\n  this.song = selectedSong;\n  this.ActiveIndex = index;\n}\n\nonAddSong(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n    this.songsService.addSong(\n      null,\n      form.value.SongRef,\n      form.value.Title,\n      form.value.FirstLine,\n      form.value.Lyrics,\n      form.value.Author,\n      form.value.CCLIRef,\n      form.value.Copyright,\n      form.value.PaceGrp,\n      form.value.Rating,\n      form.value.LastPlay,\n      form.value.MusicalKey,\n      form.value.Tempo\n      );\n    form.resetForm();\n  }\n  deleteSong(SelectedSong: Song, index: number) {\n    if (!this.hasData) {\n      return;\n    }\n    this.songsService.deleteSong(this.song.id);\n    console.log(this.song.id);\n  }\n  // tslint:disable-next-line: use-lifecycle-interface\n  ngOnDestroy() {\n    this.songsSub.unsubscribe();\n  }\n\n}\n","<div>\n    <h4>Add/Edit Song</h4>\n  <div class=\"editsong\">\n\n    <div class=\"tableSection col-md-6\">\n      <div class=\"filter sticky-top container-fluid\">\n        <div class=\"btn-group\">\n          <input id=\"searchinput\" type=\"search\" class=\"form-control\" placeholder=\"Search\" [(ngModel)]=\"searchString\"\n            (change)=\"ngOnInit()\">\n          <div id=\"searchclear\" class=\"glyphicon glyphicon-remove-circle\"></div>\n        </div>\n        <div class=\"drop-filter d-inline-block btn-group\" (change)=\"ngOnInit()\">\n          <select id=\"PaceGrp\" [(ngModel)]=\"selectedGroup\" class=\"mr-0 drop-filter d-inline-block form-control\">\n            <option value=\"0\" selected>Standard</option>\n            <option value=\"1\">Fast</option>\n            <option value=\"2\">Medium</option>\n            <option value=\"3\">Slow</option>\n            <option value=\"4\">School</option>\n            <option value=\"5\">Christmas</option>\n            <option value=\"6\">All</option>\n          </select>\n        </div>\n        <div class=\"drop-filter d-inline-block btn-group\" (change)=\"ngOnInit()\">\n          <select id=\"PaceGrp\" [(ngModel)]=\"selectedAge\" class=\"mr-0 drop-filter d-inline-block form-control\">\n            <option value=\"1\" selected>Recent</option>\n            <option value=\"2\">2 years</option>\n            <option value=\"3\">3 years</option>\n            <option value=\"10\">All</option>\n          </select>\n        </div>\n        <div class=\"drop-filter d-inline-block btn-group\" (change)=\"ngOnInit()\">\n          <select id=\"Rating\" [(ngModel)]=\"selectedRating\" class=\"mr-0 drop-filter d-inline-block form-control\">\n            <option value=\"4\">Rating 5</option>\n            <option value=\"3\">Rating 4+</option>\n            <option value=\"2\" selected>Rating 3+</option>\n            <option value=\"1\">Rating 2+</option>\n            <option value=\"0\">All Songs</option>\n          </select>\n        </div>\n        <div class=\"drop-filter d-inline-block btn-group\" (change)=\"ngOnInit()\">\n          <button class=\"btn btn-add btn-primary\">+New Song</button>\n        </div>\n        <div>\n          <table>\n            <tr>\n              <td class=\"hdr_Ref sortable\" (click)='changeSort(\"SongRef\")'>Ref</td>\n              <td class=\"hdr_Title sortable\" (click)='changeSort(\"SongTitle\")'>Title</td>\n              <td class=\"hdr_FirstLine sortable\" (click)='changeSort(\"FirstLine\")'>First Line</td>\n              <td class=\"hdr_Key sortable\" (click)='changeSort(\"MusicalKey\")'>Key</td>\n            </tr>\n          </table>\n        </div>\n      </div>\n      <div>\n        <div *ngIf=\"isLoading\" class=\"waiting\">\n          <div class=\"spinner-border\" role=\"status\">\n            <div class=\"sr-only\"></div>\n          </div>\n        </div>\n        <div *ngIf=\"!isLoading\">\n          <table>\n            <tr class=\"picker\" *ngFor=\"let song of songs; let index = index\" id=\"song-{{index}}\"\n            (mouseup)=\"selectSong(song, index)\"\n              [class.active]=\"index == ActiveIndex\">\n              <td class=\"col_Ref\">{{song.SongRef}}</td>\n              <td class=\"col_Title clipped\">{{song.SongTitle}}</td>\n              <td class=\"col_FirstLine clipped\">{{song.FirstLine}}</td>\n              <td class=\"col_key\">{{song.MusicalKey}}</td>\n              <td #song style=\"display:none\">{{song}}</td>\n            </tr>\n          </table>\n        </div>\n      </div>\n    </div>\n    <form (submit)=\"onAddSong(songForm)\" #songForm=\"ngForm\" class=\"songpage\">\n      <div class=\"buttons\">\n        <label for=\"SongRef\" class=\"mb-6\">Song Ref:</label>\n        <input id=\"SongRef\" type=\"int\" class=\"form-control mb-6 btn songref\" placeholder=\"0\" value=\"{{song.SongRef}}\"  name=\"SongRef\" ngModel>\n        <button type=\"submit\" class=\"btn btn-primary mb-6\">Save</button>\n        <button type=\"Delete\" class=\"btn btn-primary mb-6\" (click)='deleteSong(song, ActiveIndex)'>Delete</button>\n        <button type=\"cancel\" class=\"btn btn-primary mb-6\">Cancel</button>\n      </div>\n      <div class=\"form-row\">\n          <div class=\"form-group col-md-12\" *ngIf=\"hasData\">\n            <div *ngIf=\"hasData\">\n              <label for=\"SongTitle\">Song Title</label>\n              <input id=\"SongTitle\" type=\"text\" class=\"form-control\" placeholder=\"Song Title\" value=\"{{song.SongTitle}}\" name=\"Title\" ngModel>\n              <label for=\"FirstLine\">First Line</label>\n              <input id=\"FirstLine\" type=\"text\" class=\"form-control\"  placeholder=\"First Line\" value=\"{{song.FirstLine}}\" name=\"FirstLine\" ngModel>\n              <label for=\"Lyrics\">Lyrics</label>\n              <textarea id=\"Lyrics\" type=\"text\" class=\"form-control\" rows=\"10\" placeholder=\"Lyrics\" value=\"{{song.Lyrics}}\" name=\"Lyrics\" ngModel></textarea>\n              <label for=\"Author\">Author</label>\n              <textarea id=\"Author\" type=\"text\" class=\"form-control\" rows=\"3\" placeholder=\"Artist\" value=\"{{song.Author}}\" name=\"Author\" ngModel></textarea>\n              <label for=\"Rating\">Rating</label>\n              <select class=\"form-control\" id=\"RatingSelect\" name=\"Rating\" value=\"{{song.Rating}}\" ngModel>\n                <option>5</option>\n                <option>4</option>\n                <option>3</option>\n                <option>2</option>\n                <option>1</option>\n             </select>\n\n              <label for=\"Pace/Group\">Pace Group</label>\n              <select class=\"form-control\" id=\"PaceSelect\" name=\"PaceGrp\" value=\"{{song.PaceGrp}}\" ngModel>\n                <option>Fast - Praise</option>\n                <option>Medium</option>\n                <option>Slow - Worship</option>\n                <option>Christmas</option>\n                <option>Kids/School</option>\n              </select>\n              <label for=\"MusicalKey\">Musical Key</label>\n              <select class=\"form-control\" id=\"KeySelect\" name=\"MusicalKey\" value=\"{{song.MusicalKey}}\" ngModel>\n                <option>A</option>\n                <option>Bb</option>\n                <option>B</option>\n                <option>C</option>\n                <option>C#</option>\n                <option>D</option>\n                <option>Eb</option>\n                <option>E</option>\n                <option>F</option>\n                <option>F#</option>\n                <option>G</option>\n                <option>Ab</option>\n              </select>\n              <label for=\"Copyright\">Copyright</label>\n              <textarea id=\"Copyright\" type=\"text\" class=\"form-control\" rows=\"3\" placeholder=\"Copyright\" value=\"{{song.Copyright}}\" name=\"Copyright\" ngModel></textarea>\n              <label for=\"CCLI_Ref\">CCLI Reference</label>\n              <Input id=\"CCLI_Ref\" type=\"text\" class=\"form-control\" placeholder=\"CCLI_Ref\" value=\"{{song.CCLI_Ref}}\" name=\"CCLI_Ref\" ngModel>\n              <label for=\"Tempo\">Tempo</label>\n              <Input id=\"Tempo\" type=\"text\" class=\"form-control\" placeholder=\"Tempo\" value=\"{{song.Tempo}}\" name=\"Tempo\" ngModel>\n              <label for=\"LastPlay\">Last Used</label>\n              <Input id=\"LastPlay\" type=\"text\" class=\"form-control\" placeholder=\"---\" name=\"LastPlay\" ngModel>\n            </div>\n            <div *ngIf=\"!hasData\">\n              <label for=\"SongTitle\">Song Title</label>\n              <input id=\"SongTitle\" type=\"text\" class=\"form-control\" placeholder=\"Song Title\" name=\"Title\" ngModel>\n              <label for=\"FirstLine\">First Line</label>\n              <input id=\"FirstLine\" type=\"text\" class=\"form-control\"  placeholder=\"First Line\" name=\"FirstLine\" ngModel>\n              <label for=\"Lyrics\">Lyrics</label>\n              <textarea id=\"Lyrics\" type=\"text\" class=\"form-control\" rows=\"10\" placeholder=\"Lyrics\" name=\"Lyrics\" ngModel></textarea>\n              <label for=\"Author\">Author</label>\n              <textarea id=\"Author\" type=\"text\" class=\"form-control\" rows=\"3\" placeholder=\"Artist\" name=\"Author\" ngModel></textarea>\n              <label for=\"Rating\">Rating</label>\n              <select class=\"form-control\" id=\"RatingSelect\" name=\"Rating\" ngModel>\n                <option>5</option>\n                <option>4</option>\n                <option>3</option>\n                <option>2</option>\n                <option>1</option>\n             </select>\n\n              <label for=\"Pace/Group\">Pace Group</label>\n              <select class=\"form-control\" id=\"PaceSelect\" name=\"PaceGrp\" ngModel>\n                <option>Fast - Praise</option>\n                <option>Medium</option>\n                <option>Slow - Worship</option>\n                <option>Christmas</option>\n                <option>Kids/School</option>\n              </select>\n              <label for=\"MusicalKey\">Musical Key</label>\n              <select class=\"form-control\" id=\"KeySelect\" name=\"MusicalKey\" ngModel>\n                <option>A</option>\n                <option>Bb</option>\n                <option>B</option>\n                <option>C</option>\n                <option>C#</option>\n                <option>D</option>\n                <option>Eb</option>\n                <option>E</option>\n                <option>F</option>\n                <option>F#</option>\n                <option>G</option>\n                <option>Ab</option>\n              </select>\n              <label for=\"Copyright\">Copyright</label>\n              <textarea id=\"Copyright\" type=\"text\" class=\"form-control\" rows=\"3\" placeholder=\"Copyright\" name=\"Copyright\" ngModel></textarea>\n              <label for=\"CCLI_Ref\">CCLI Reference</label>\n              <Input id=\"CCLI_Ref\" type=\"text\" class=\"form-control\" placeholder=\"CCLI_Ref\" name=\"CCLI_Ref\" ngModel>\n              <label for=\"Tempo\">Tempo</label>\n              <Input id=\"Tempo\" type=\"text\" class=\"form-control\" placeholder=\"Tempo\" name=\"Tempo\" ngModel>\n              <label for=\"LastPlay\">Last Used</label>\n              <Input id=\"LastPlay\" type=\"text\" class=\"form-control\" placeholder=\"---\" name=\"LastPlay\" ngModel>\n              </div>\n              <br/>\n          </div>\n      </div>\n    </form>\n\n  </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth/auth.service';\nimport { Subscription } from 'rxjs';\nimport { Song } from '../song.model';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  private authListenerSubs: Subscription;\n  userIsAuthenticated = false;\n  title = 'enlightWeb';\n  icon = '../../assets/Images/logo.png';\n  storedSongs: Song[] = [];\n\n  constructor(private authService: AuthService) {}\n\n  ngOnInit(): void {\n    this.userIsAuthenticated = this.authService.getIsAuth();\n    this.authListenerSubs = this.authService\n      .getAuthStatusListener()\n      .subscribe(isAuthenticated => {\n         this.userIsAuthenticated = isAuthenticated;\n         console.log(isAuthenticated);\n      });\n  }\n  onLogout() {\n    this.authService.logout();\n  }\n\n\n}\n","<div class=\"container-fluid\">\n  <nav class=\"navbar navbar-expand-sm bg-dark navbar-dark\">\n    <div class=\"navbar-nav\">\n      <li *ngIf=\"userIsAuthenticated\"><a class=\"nav-item nav-link\" routerLink=\"/BuildSet\">Build Set</a></li>\n      <li *ngIf=\"userIsAuthenticated\"><a class=\"nav-item nav-link\" routerLink=\"/EditSong\">Edit/Add Song</a></li>\n      <li *ngIf=\"userIsAuthenticated\"><a class=\"nav-item nav-link\" routerLink=\"/LeadSheet\">Lead Sheets</a></li>\n      <li *ngIf=\"userIsAuthenticated\"><a class=\"nav-item nav-link\" (click)=\"onLogout()\">Logout</a></li>\n      <li *ngIf=\"!userIsAuthenticated\"><a class=\"nav-item nav-link\" routerLink=\"/Login\">Login</a></li>\n      <li *ngIf=\"!userIsAuthenticated\"><a class=\"nav-item nav-link\" routerLink=\"/Signup\">Signup</a></li>\n    </div>\n  </nav>\n  <div class=\"body\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-lead-sheet',\n  templateUrl: './lead-sheet.component.html',\n  styleUrls: ['./lead-sheet.component.css']\n})\nexport class LeadSheetComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>lead-sheet works!</p>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { Song } from '../song.model';\nimport { Set, SetRow } from '../set.model';\n\nimport { SongsService } from '../songs.service';\nimport { SetsService } from '../sets.service';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-scroll-songs',\n  templateUrl: './scroll-songs.component.html',\n  styleUrls: ['./scroll-songs.component.css']\n})\n\nexport class ScrollSongsComponent implements OnInit, OnDestroy {\n   hasData = false;\n   setStarted = false;\n   songs: Song[];\n   song: Song;\n   sets: Set[];\n   set: Set;\n   setList: Set[] = [];\n   setRows: SetRow[] = [];\n   newSet: Set;\n  setDate: Date = new Date();\n  private songsSub: Subscription;\n  private setsSub: Subscription;\n\n  constructor(public songsService: SongsService,\n              public setsService: SetsService) {}\n\n\n  isLoading = false;\n  public chooseSet = false;\n  ActiveIndex = 0;\n  searchString = '';\n  selectedGroup = '0';\n  selectedAge = '1';\n  selectedRating = '2';\n  sortField = 'SongRef';\n  sortDirection = -1;\n  setList1: any;\n\n  public isHidden = true;\n  xPosTabMenu = 0;\n  yPosTabMenu = 0;\n  indexTabMenu = 0;\n\n  public datepipe: DatePipe;\n\n  ngOnInit() {\n    this.getSongs();\n  }\n\n  getSongs() {\n    this.songsService.getSongs(\n      this.selectedGroup,\n      this.selectedAge,\n      this.selectedRating,\n      this.searchString,\n      this.sortField,\n      this.sortDirection\n      );\n    this.isLoading = true;\n    this.songsSub = this.songsService.getSongUpdateListener()\n      .subscribe((songs: Song[]) => {\n        this.isLoading = false;\n        this.songs = songs;\n        this.song = this.songs[0];\n        this.hasData = true;\n      });\n  }\n\n  showLyrics(selectedSong: Song, index: number) {\n    this.hasData = true;\n    this.song = selectedSong;\n    this.ActiveIndex = index;\n  }\n\n  changeSort(field: string) {\n      if (this.sortField === field) {\n        this.sortDirection = -this.sortDirection;\n      }\n      else {\n        this.sortField = field;\n        if (field === 'SongRef') {\n           this.sortDirection = -1;\n        } else {\n           this.sortDirection = 1;\n        }\n      }\n      this.getSongs();\n      this.ActiveIndex = 0;\n  }\n\n  addtoSet(song: Song) {\n     const newRow: SetRow = new SetRow();\n     newRow.SRType = 'S';\n     newRow.SRMusicalKey = song.MusicalKey;\n     newRow.SRFirstLine = song.FirstLine;\n     newRow.SRRef = song.SongRef;\n     newRow.SRTitle = song.SongTitle;\n     newRow.SRPaceGrp = song.PaceGrp;\n     this.setRows.splice(this.setRows.length, 0 , newRow);\n     this.setStarted = true;\n  }\n\n  onDateSelected() {\n    const d: Date = this.setDate;\n  }\n\n  loadTemplate() {\n    let newRow: SetRow = new SetRow();\n    newRow.SRTitle = 'AM';\n    newRow.SRType = 'T';\n    this.setRows.splice(this.setRows.length, 0 , newRow);\n    newRow = new SetRow();\n    newRow.SRType = 'L';\n    this.setRows.splice(this.setRows.length, 0 , newRow);\n    newRow = new SetRow();\n    newRow.SRType = 'L';\n    this.setRows.splice(this.setRows.length, 0 , newRow);\n    newRow = new SetRow();\n    newRow.SRType = 'L';\n    this.setRows.splice(this.setRows.length, 0 , newRow);\n    newRow = new SetRow();\n    this.setStarted = true;\n  }\n\n  clearSet() {\n    this.setRows.length = 0;\n    this.setStarted = false;\n  }\n\n  showMenuOptions() {\n    return 'Delete;AM Title;PM Title;Spacer;Standard Song;Pre Song;Extra Song';\n}\n\n\nrightClick(event, index) {\n  event.stopPropagation();\n  this.xPosTabMenu = event.clientX;\n  this.yPosTabMenu = event.clientY;\n  this.indexTabMenu = index;\n  this.isHidden = false;\n  return false;\n}\n\ncloseRightClickMenu() {\n  this.isHidden = true;\n}\n\nhandleMenuSelection( menuselection: string) {\n  let newRow: SetRow = new SetRow();\n  if ( menuselection === 'Delete') {\n    this.setRows.splice(this.indexTabMenu, 1);\n    if (this.setRows.length === 0) {\n      this.setStarted = false;\n    }\n  } else if ( menuselection === 'Standard Song') {\n    this.setRows[this.indexTabMenu].SRType = 'S';\n  } else if ( menuselection === 'Pre Song') {\n    this.setRows[this.indexTabMenu].SRType = 'P';\n  } else if ( menuselection === 'Extra Song') {\n    this.setRows[this.indexTabMenu].SRType = 'X';\n  } else if (menuselection === 'Spacer') {\n    newRow = new SetRow();\n    newRow.SRType = 'L';\n    this.setRows.splice(this.setRows.length, 0 , newRow);\n  } else if (menuselection === 'AM Title') {\n    newRow = new SetRow();\n    newRow.SRTitle = 'AM';\n    newRow.SRType = 'T';\n    this.setRows.splice(this.setRows.length, 0 , newRow);\n  } else if (menuselection === 'PM Title') {\n    newRow = new SetRow();\n    newRow.SRTitle = 'PM';\n    newRow.SRType = 'T';\n    this.setRows.splice(this.setRows.length, 0 , newRow);\n  }\n}\n\n\ntransformDate(date) {\n return this.datepipe.transform(date, 'dd mmm yy');\n}\n\ngetSets() {\n  if (this.chooseSet === false)\n  {\n    this.chooseSet = true;\n    console.log('Choose Set: true');\n    this.setsService.getSets(\n      );\n    this.setsSub = this.setsService.getSetUpdateListener()\n      .subscribe((sets: Set[]) => {\n        this.sets = sets;\n      });\n  } else {\n    this.chooseSet = false;\n    console.log('Choose Set: false');\n  }\n\n}\n\n  ngOnDestroy() {\n    this.songsSub.unsubscribe();\n  }\n\n}\n","<div class=\"component\">\n  <div class=\"lyricsSection\">\n    <div class=\"form-group\">\n      <div *ngIf=\"hasData\">\n        <p class=\"title clipped\">{{song.SongTitle}}</p>\n        <p class=\"firstline clipped\">{{song.FirstLine}}</p>\n        <p class=\"lyrics\">{{song.Lyrics}}</p>\n      </div>\n      <div *ngIf=\"!hasData\">No Data</div>\n    </div>\n  </div>\n  <div class=\"tableSection\">\n    <div class=\"filter sticky-top container-fluid\">\n      <div class=\"btn-group\">\n        <input id=\"searchinput\" type=\"search\" class=\"form-control\" placeholder=\"Search\" [(ngModel)]=\"searchString\"\n          (change)=\"ngOnInit()\">\n        <div id=\"searchclear\" class=\"glyphicon glyphicon-remove-circle\"></div>\n      </div>\n      <div class=\"drop-filter d-inline-block btn-group\" (change)=\"ngOnInit()\">\n        <select id=\"PaceGrp\" [(ngModel)]=\"selectedGroup\" class=\"mr-0 drop-filter d-inline-block form-control\">\n          <option value=\"0\" selected>Standard</option>\n          <option value=\"1\">Fast</option>\n          <option value=\"2\">Medium</option>\n          <option value=\"3\">Slow</option>\n          <option value=\"4\">School</option>\n          <option value=\"5\">Christmas</option>\n          <option value=\"6\">All</option>\n        </select>\n      </div>\n      <div class=\"drop-filter d-inline-block btn-group\" (change)=\"ngOnInit()\">\n        <select id=\"PaceGrp\" [(ngModel)]=\"selectedAge\" class=\"mr-0 drop-filter d-inline-block form-control\">\n          <option value=\"1\" selected>Recent</option>\n          <option value=\"2\">2 years</option>\n          <option value=\"3\">3 years</option>\n          <option value=\"10\">All</option>\n        </select>\n      </div>\n      <div class=\"drop-filter d-inline-block btn-group\" (change)=\"ngOnInit()\">\n        <select id=\"Rating\" [(ngModel)]=\"selectedRating\" class=\"mr-0 drop-filter d-inline-block form-control\">\n          <option value=\"4\">Rating 5</option>\n          <option value=\"3\">Rating 4+</option>\n          <option value=\"2\" selected>Rating 3+</option>\n          <option value=\"1\">Rating 2+</option>\n          <option value=\"0\">All Songs</option>\n        </select>\n      </div>\n      <div>\n        <table>\n          <tr>\n            <td class=\"hdr_Ref sortable\" (click)='changeSort(\"SongRef\")'>Ref</td>\n            <td class=\"hdr_Title sortable\" (click)='changeSort(\"SongTitle\")'>Title</td>\n            <td class=\"hdr_FirstLine sortable\" (click)='changeSort(\"FirstLine\")'>First Line</td>\n            <td class=\"hdr_Key sortable\" (click)='changeSort(\"MusicalKey\")'>Key</td>\n            <td class=\"hdr_Key\">Add</td>\n          </tr>\n        </table>\n      </div>\n    </div>\n    <div>\n      <div *ngIf=\"isLoading\" class=\"waiting\">\n        <div class=\"spinner-border\" role=\"status\">\n          <div class=\"sr-only\"></div>\n        </div>\n      </div>\n      <div *ngIf=\"!isLoading\">\n        <table>\n          <tr class=\"picker\" *ngFor=\"let song of songs; let index = index\" id=\"song-{{index}}\"\n            (mouseup)=\"showLyrics(song, index)\"\n            (dblclick)=\"addtoSet(song)\"\n            [class.active]=\"index == ActiveIndex\">\n            <td class=\"col_Ref\">{{song.SongRef}}</td>\n            <td class=\"col_Title clipped\">{{song.SongTitle}}</td>\n            <td class=\"col_FirstLine clipped\">{{song.FirstLine}}</td>\n            <td class=\"col_key\">{{song.MusicalKey}}</td>\n            <td><img src=\"../../assets/Images/ToList.png\" alt=\" \" width=\"14\" height=\"14\" (click)=\"addtoSet(song)\"></td>\n            <td #song style=\"display:none\">{{song}}</td>\n          </tr>\n        </table>\n      </div>\n    </div>\n  </div>\n  <div></div>\n  <div class=\"setSection\" (click)=\"closeRightClickMenu()\">\n\n    <div class=\"setHeader sticky-top\">\n      <form class=\"form-inline\">\n        <div class=\"form-group\">\n          <div class=\"input-group\">\n            <div class=\"title setdatetitle form-control\">Set Details</div>\n            <input class=\"form-control\" placeholder=\"<set name | dd mmm yy>\"\n                   name=\"dp\" [(ngModel)]=\"setDate\" ngbDatepicker #dp=\"ngbDatepicker\" (dateSelect)=\"onDateSelected()\">\n            <button class=\"btn calendar\" (click)=\"dp.toggle()\" type=\"button\"><img width=\"28px\" title=\"Pick Date\" src=\"..\\..\\assets\\Images\\cal.png\"/></button>\n            <button class=\"btn\" type=\"button\"><img width=\"28px\" title=\"Load Template\" (click)=\"loadTemplate()\" src=\"..\\..\\assets\\Images\\add_template.png\"/></button>\n            <button class=\"btn\" type=\"button\"><img width=\"28px\" title=\"Clear Set\" (click)=\"clearSet()\" src=\"..\\..\\assets\\Images\\erase_document.png\"/></button>\n            <button class=\"btn\" type=\"button\"><img width=\"28px\" title=\"Load Set\" (click)=\"getSets()\" src=\"..\\..\\assets\\Images\\load_document.png\"/></button>\n            <button class=\"btn\" type=\"button\"><img width=\"28px\" title=\"Save Set\" src=\"..\\..\\assets\\Images\\save_document.png\"/></button>\n            <button class=\"btn\" type=\"button\"><img width=\"28px\" title=\"Export to Word\" src=\"..\\..\\assets\\Images\\Export_document.png\"/></button>\n          </div>\n        </div>\n      </form>\n    </div>\n\n\n    <div *ngIf=\"chooseSet\" class=\"setFile\" >\n      <div *ngFor=\"let set of sets; let index = index\" id=\"{{set.Leader}}\">\n        <ul>\n          <li>{{set.Leader}} - {{set.SetName}}</li>\n        </ul>\n      </div>\n    </div>\n\n    <div [sortablejs]=\"setList\" [sortablejsOptions]=\"{ animation: 150 }\">\n       <div class=\"setitem\" *ngFor=\"let set of setRows; let index = index\" id=\"{{set.SRType}}\" (contextmenu)=\"rightClick($event, index)\">\n         <div class=\"rowseq\">{{set.SRType}}</div>\n         <div class=\"rowtitle clipped\">{{ set.SRTitle }}</div>\n         <div class=\"rowfirstline clipped\">{{ set.SRFirstLine }}</div>\n         <div class=\"rowkey\">{{set.SRMusicalKey}}</div>\n       </div>\n    </div>\n\n\n    <p *ngIf=\"!setStarted\">Set Not Started</p>\n\n    <app-set-context-menu *ngIf=\"!isHidden\" [x]=\"xPosTabMenu\" [y]=\"yPosTabMenu\" [menuitems]=\"showMenuOptions()\" [index]=\"indexTabMenu\" (menuItemSelected)=\"handleMenuSelection($event)\"></app-set-context-menu>\n\n    <hr>\n\n    <div class=\"sticky-bottom setFooter container-fluid\">\n\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-set-context-menu',\n  templateUrl: './set-context-menu.component.html',\n  styleUrls: ['./set-context-menu.component.css']\n})\nexport class SetContextMenuComponent implements OnInit {\n\n  @Input() x = 0;\n  @Input() y = 0;\n  @Input() menuitems = '';\n  @Input() index = 0;\n  theMenuItems = [];\n  @Output() menuItemSelected = new EventEmitter();\n\n  constructor() { }\n\n  outputSelectedMenuItem( menuitem: string) {\n    this.menuItemSelected.emit(menuitem);\n  }\n\n  ngOnInit() {\n    this.theMenuItems = this.menuitems.split(';');\n  }\n}\n","<div class=\"menu\" [ngStyle]=\"{'left.px': x, 'top.px': y}\">\n  <ul class=\"list-group\">\n    <li class=\"list-group-item ngbButton\" *ngFor=\"let menuItem of theMenuItems\">\n      <div type=\"button\" class=\"ngbButtonLabel\" (click)=\"outputSelectedMenuItem(menuItem)\">{{ menuItem }}</div>\n    </li>\n  </ul>\n</div>\n","export class Set {\r\n  id: string;\r\n  Leader: string;\r\n  SetName: string;\r\n  SetRows: SetRow;\r\n}\r\n\r\nexport class SetRow {\r\n  SRType: string;\r\n  SRTitle: string;\r\n  SRFirstLine: string;\r\n  SRPaceGrp: number;\r\n  SRRef: number;\r\n  SRMusicalKey: string;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-set',\n  templateUrl: './set.component.html',\n  styleUrls: ['./set.component.css']\n})\nexport class SetComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>set works!</p>\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Subject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { Set, SetRow } from './set.model';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class SetsService {\r\n  private sets: Set[] = [];\r\n  private setsUpdated = new Subject<Set[]>();\r\n\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  getSets() {\r\n    this.http\r\n      .get<{ message: string; sets: any }>(\r\n        'http://localhost:3000/api/sets'\r\n      )\r\n      .pipe(map((setData) => {\r\n        return setData.sets.map(set => {\r\n          return {\r\n            Leader: set.Leader,\r\n            SetName: set.SetName,\r\n            SetRows: [{\r\n              SR_Type: set.Type,\r\n              SR_Title: set.Title,\r\n              SR_FirstLine: set.FirstLine,\r\n              SR_MusicalKey: set.Key,\r\n              SR_Ref: set.SongRef,\r\n              SR_Lyrics: set.Lyrics,\r\n              SR_Style: set.Style,\r\n              id: set._id\r\n            }]\r\n          };\r\n        });\r\n      }))\r\n      .subscribe(transformedSets => {\r\n        this.sets = transformedSets;\r\n        this.setsUpdated.next([...this.sets]);\r\n      });\r\n  }\r\n\r\n  getSet(id: string) {\r\n    return this.http\r\n    .get<{ message: string; sets: any }>(\r\n      'http://localhost:3000/api/sets'\r\n      )\r\n    .pipe(map((setData) => {\r\n        return setData.sets.map(set => {\r\n          return {\r\n            Leader: set.Leader,\r\n            SetName: set.SetName,\r\n            SetRows: [{\r\n              SR_Type: set.Type,\r\n              SR_Title: set.Title,\r\n              SR_FirstLine: set.FirstLine,\r\n              SR_MusicalKey: set.Key,\r\n              SR_Ref: set.SongRef,\r\n              SR_Lyrics: set.Lyrics,\r\n              SR_Style: set.Style,\r\n              id: set._id\r\n            }]\r\n\r\n          };\r\n        });\r\n      }))\r\n      .subscribe(loadedSets => {\r\n        this.sets = loadedSets;\r\n        this.setsUpdated.next([...this.sets]);\r\n    });\r\n  }\r\n\r\n  getSetUpdateListener() {\r\n    return this.setsUpdated.asObservable();\r\n  }\r\n/* below split to add parent + add children ??*/\r\n/*   addSet(\r\n          id: string,\r\n          leader: string,\r\n          setname: string,\r\n          setrows: SetRow[]\r\n        ) {\r\n    const set: Set = {\r\n      id: null,\r\n      Leader: leader,\r\n      SetName: setname,\r\n      SetRow: setrows\r\n    };\r\n    this.http\r\n      .post<{message: string, setId: string }>(\r\n          'http://localhost:3000/api/sets', set\r\n          )\r\n      .subscribe(responseData => {\r\n        // tslint:disable-next-line: no-shadowed-variable\r\n        const id = responseData.setId;\r\n        set.id = id;\r\n        this.sets.push(set);\r\n        this.setsUpdated.next([...this.sets]);\r\n      });\r\n    } */\r\n\r\n    deleteSet(setId: string) {\r\n      this.http.delete(\r\n        'http://localhost:3000/api/sets/' + setId\r\n        )\r\n        .subscribe(() => {\r\n          console.log(setId);\r\n          const updatedsets = this.sets.filter(post => post.id !== setId);\r\n          this.sets = updatedsets;\r\n          this.setsUpdated.next([...this.sets]);\r\n        });\r\n    }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Subject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { Song } from './song.model';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class SongsService {\r\n  private songs: Song[] = [];\r\n  private songsUpdated = new Subject<Song[]>();\r\n  private songId: string;\r\n\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  getSongs(paceGrp: string, age: string, rating: string, find: string, sortField: string, sortDirection: number) {\r\n    const queryParams = `?pace=${paceGrp}&age=${age}&rating=${rating}&find=${find}&sortField=${sortField}&sortDirection=${sortDirection}`;\r\n\r\n    this.http\r\n      .get<{ message: string; songs: any }>(\r\n        'http://localhost:3000/api/songs' + queryParams\r\n      )\r\n      .pipe(map((songData) => {\r\n        return songData.songs.map(song => {\r\n          return {\r\n            SongRef: song.SongRef,\r\n            SongTitle: song.SongTitle,\r\n            FirstLine: song.FirstLine,\r\n            Lyrics: song.Lyrics,\r\n            Author: song.Author,\r\n            CCLI_Ref: song.CCLI_Ref,\r\n            Copyright: song.Copyright,\r\n            PaceGrp: song.PaceGrp,\r\n            Rating: song.Rating,\r\n            LastPlay: song.LastPlay,\r\n            MusicalKey: song.MusicalKey,\r\n            Tempo: song.Tempo,\r\n            id: song._id\r\n          };\r\n        });\r\n      }))\r\n      .subscribe(transformedSongs => {\r\n        this.songs = transformedSongs;\r\n        this.songsUpdated.next([...this.songs]);\r\n      });\r\n  }\r\n\r\n  getSong(id: string) {\r\n    return this.http\r\n    .get<{ message: string; songs: any }>(\r\n      'http://localhost:3000/api/songs'\r\n      )\r\n    .pipe(map((songData) => {\r\n        return songData.songs.map(song => {\r\n          return {\r\n            SongRef: song.SongRef,\r\n            SongTitle: song.SongTitle,\r\n            FirstLine: song.FirstLine,\r\n            Lyrics: song.Lyrics,\r\n            Author: song.Author,\r\n            CCLI_Ref: song.CCLI_Ref,\r\n            Copyright: song.Copyright,\r\n            PaceGrp: song.PaceGrp,\r\n            Rating: song.Rating,\r\n            LastPlay: song.LastPlay,\r\n            MusicalKey: song.MusicalKey,\r\n            Tempo: song.Tempo,\r\n            id: song._id\r\n          };\r\n        });\r\n      }))\r\n      .subscribe(loadedSongs => {\r\n        this.songs = loadedSongs;\r\n        this.songsUpdated.next([...this.songs]);\r\n    });\r\n  }\r\n\r\n  getSongUpdateListener() {\r\n    return this.songsUpdated.asObservable();\r\n  }\r\n\r\n  addSong(\r\n          id: string,\r\n          songref: number,\r\n          songtitle: string,\r\n          firstline: string,\r\n          lyrics: string,\r\n          author: string,\r\n          ccliref: string,\r\n          copyright: string,\r\n          pacegrp: number,\r\n          rating: number,\r\n          lastplay: Date,\r\n          musicalkey: string,\r\n          tempo: number ) {\r\n    const song: Song = {\r\n      id: null,\r\n      SongRef: songref,\r\n      SongTitle: songtitle,\r\n      FirstLine: firstline,\r\n      Lyrics: lyrics,\r\n      Author: author,\r\n      CCLI_Ref: ccliref,\r\n      Copyright: copyright,\r\n      PaceGrp: pacegrp,\r\n      Rating: rating,\r\n      LastPlay: lastplay,\r\n      MusicalKey: musicalkey,\r\n      Tempo: tempo\r\n    };\r\n    this.http\r\n      .post<{message: string, songId: string }>(\r\n          'http://localhost:3000/api/songs', song\r\n          )\r\n      .subscribe(responseData => {\r\n        // tslint:disable-next-line: no-shadowed-variable\r\n        const id = responseData.songId;\r\n        song.id = id;\r\n        this.songs.push(song);\r\n        this.songsUpdated.next([...this.songs]);\r\n      });\r\n    }\r\n\r\n    deleteSong(songId: string) {\r\n      this.http\r\n        .delete(\r\n          'http://localhost:3000/api/songs/' + songId\r\n          )\r\n        .subscribe(() => {\r\n          const updatedsongs = this.songs.filter(post => post.id !== songId);\r\n          this.songs = updatedsongs;\r\n          this.songsUpdated.next([...this.songs]);\r\n        });\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://enlightweb.net'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}